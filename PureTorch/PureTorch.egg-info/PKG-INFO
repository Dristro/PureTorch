Metadata-Version: 2.2
Name: PureTorch
Version: 0.1.3
Summary: A PyTorch-like library built from scratch
Home-page: https://github.com/Dristro/PureTorch.git
Author: Dhruv N
Author-email: Dhruv N <dhruvn853@gmail.com>
License: MIT
Project-URL: Source, https://github.com/Dristro/PureTorch
Project-URL: Dev-Branch, https://github.com/Dristro/PureTorch/tree/dev
Project-URL: Report-Issues, https://github.com/Dristro/PureTorch/issues
Keywords: deep learning,neural networks,machine learning,pytorch,numpy
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9,<3.12
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Dynamic: author
Dynamic: home-page
Dynamic: requires-python

***
# Table of contents
|Title|Desc|
|-|-|
|[Version](#version-info)|Current version and features|
|[Purpose](#purpose)|What and why of this repo|
|[Structure](#structure)|File structure of various modules|
|[Upcoming features](#upcoming-features)|Features that im working on|
|[Setup](#setup)|How to setup locally|
****

# Version info
**Current version** - 0.1.3\
**New features** - new Flatten layer added inside PureTorch.layers

*Runs on CPU only. Might add GPU support later.*
****

# Purpose
Raw implementation of PyTorch using NumPy.
The structure and essence of torch remains the same, but its fully implemented using NumPy.
****

# Structure
<u><b>Current file structure</b></u>:
- PureTorch
    - activations
        - ReLU
        - Softmax
        - Tanh
    - layers
        - Sequential
        - Linear
        - Flatten
    - loss
        - CrossEntropyLoss
        - SparseCrossEntropyLoss

Will be adding other layers, activations, losses, optimizers.\
As of now, the default optimizer is SGD.\
To check the "development code" check the "dev" branch
****

# Upcoming features
These are the features that im working on, and will soon be a part of PureTorch.
- Convolutional layer(s)
    - 2D first, then 1D and multi-dim
****

# Setup
Install git before running this command in your env, then run:
```
pip install PureTorch
```
Run: (to verify the installation in python)
```
import PureTorch
print(PureTorch.__version__)
```
or: (to verify the installation on the terminal)
```
python3 -c "import PureTorch; print(PureTorch.__version__)"
```
****
